(ns blackjack-clojure.drawing-test
  (:require [clojure.test :refer :all]
            [blackjack-clojure.drawing :refer :all]))

(deftest draw-player-hand
  (testing "That a hand can be represented as a string."
    (is (= "ğŸ‚¡ ğŸ‚±"
           (draw-hand [{:rank "ace", :suit "â™ "},
                       {:rank "ace", :suit "â™¥"}])))))

(deftest draw-dealers-hand
  (testing "That a dealer's hand can be represented as a string."
    (is (= "ğŸ‚¡ ğŸ‚ "
           (draw-obscured-hand [{:rank "ace", :suit "â™ "},
                                {:rank "ace", :suit "â™¥"}])))))

(deftest draw-game-test
  (let [actual (draw-game
                [{:rank "ace", :suit "â™ "}
                 {:rank 2, :suit "â™ "}]
                [{:rank 3, :suit "â™ "}
                 {:rank 4, :suit "â™ "}])
        expected "Dealer:\nğŸ‚£ ğŸ‚ \nPlayer:\nğŸ‚¡ ğŸ‚¢"]
    (is (= expected actual))))
